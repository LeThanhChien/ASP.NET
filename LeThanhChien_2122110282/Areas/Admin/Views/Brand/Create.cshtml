@model LeThanhChien_2122110282.Context.Brand

@{
    ViewBag.Title = "Create";
}

<h2 style="text-align:center">Thêm mới thương hiệu</h2>

@using (Html.BeginForm("Create", "Brand", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Thương hiệu</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Field</th>
                    <th>Input</th>
                </tr>
            </thead>
            <tbody>
                <!-- ID -->
                <tr>
                    <td>@Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label" })</td>
                    <td>
                        @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <!-- Name -->
                <tr>
                    <td>@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })</td>
                    <td>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <!-- Avatar -->
                <tr>
                    <td>@Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label" })</td>
                    <td>
                    <input type="file" name="ImageUpload" class="form-control" />
                    </td>
                </tr>

                <!-- Slug -->
                <tr>
                    <td>@Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label" })</td>
                    <td>
                        @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <!-- ShowOnHomePage -->
                <tr>
                    <td>@Html.LabelFor(model => model.ShowOnHomePage, htmlAttributes: new { @class = "control-label" })</td>
                    <td>
                        <div class="checkbox">
                            @Html.EditorFor(model => model.ShowOnHomePage)
                            @Html.ValidationMessageFor(model => model.ShowOnHomePage, "", new { @class = "text-danger" })
                        </div>
                    </td>
                </tr>

                <!-- DisplayOrder -->
                <tr>
                    <td>@Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label" })</td>
                    <td>
                        @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <!-- CreatedOnUtc -->
                <tr>
                    <td>@Html.LabelFor(model => model.CreatedOnUtc, htmlAttributes: new { @class = "control-label" })</td>
                    <td>
                        @Html.EditorFor(model => model.CreatedOnUtc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedOnUtc, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <!-- UpdatedOnUtc -->
                <tr>
                    <td>@Html.LabelFor(model => model.UpdatedOnUtc, htmlAttributes: new { @class = "control-label" })</td>
                    <td>
                        @Html.EditorFor(model => model.UpdatedOnUtc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UpdatedOnUtc, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <!-- Deleted -->
                <tr>
                    <td>@Html.LabelFor(model => model.Deleted, htmlAttributes: new { @class = "control-label" })</td>
                    <td>
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Deleted)
                            @Html.ValidationMessageFor(model => model.Deleted, "", new { @class = "text-danger" })
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "BrandList", "Brand", new { @class = "btn btn-secondary" })
</div>
