@model LeThanhChien_2122110282.Models.HomeModel

@{
    ViewBag.Title = "Trang Chủ";
}

<section class="section-slide">
    <div class="wrap-slick1">
        <div class="slick1">
            <div class="item-slick1" style="background-image: url('@Url.Content("~/Content/images1/slide1.jpg")');">
                <div class="container h-full">
                    <div class="flex-col-l-m h-full p-t-100 p-b-30 respon5">
                        <div class="layer-slick1 animated visible-false" data-appear="fadeInDown" data-delay="0">
                            <span class="ltext-101 cl2 respon2">
                                Bộ Sưu Tập Sang Trọng Nam 2025
                            </span>
                        </div>
                        <div class="layer-slick1 animated visible-false" data-appear="fadeInUp" data-delay="800">
                            <h2 class="ltext-201 cl2 p-t-19 p-b-43 respon1">
                                SẢN PHẨM MỚI
                            </h2>
                        </div>
                        <div class="layer-slick1 animated visible-false" data-appear="zoomIn" data-delay="1600">
                            <a href="product.html" class="flex-c-m stext-101 cl0 size-101 bg1 bor1 hov-btn1 p-lr-15 trans-04">
                                Mua Ngay
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="item-slick1" style="background-image: url('@Url.Content("~/Content/images1/slide02.jpg")');">
                <div class="container h-full">
                    <div class="flex-col-l-m h-full p-t-100 p-b-30 respon5">
                        <div class="layer-slick1 animated visible-false" data-appear="rollIn" data-delay="0">
                            <span class="ltext-101 cl2 respon2">
                                Đồng Hồ Nam Hiện Đại 2025
                            </span>
                        </div>
                        <div class="layer-slick1 animated visible-false" data-appear="lightSpeedIn" data-delay="800">
                            <h2 class="ltext-201 cl2 p-t-19 p-b-43 respon1">
                                PHONG CÁCH VĨNH CỬU
                            </h2>
                        </div>
                        <div class="layer-slick1 animated visible-false" data-appear="slideInUp" data-delay="1600">
                            <a href="#" class="flex-c-m stext-101 cl0 size-101 bg1 bor1 hov-btn1 p-lr-15 trans-04">
                                Mua Ngay
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="item-slick1" style="background-image: url('@Url.Content("~/Content/images1/slide03.jpg")');">
                <div class="container h-full">
                    <div class="flex-col-l-m h-full p-t-100 p-b-30 respon5">
                        <div class="layer-slick1 animated visible-false" data-appear="rotateInDownLeft" data-delay="0">
                            <span class="ltext-101 cl2 respon2">
                                Đồng Hồ Nữ Thanh Lịch 2025
                            </span>
                        </div>
                        <div class="layer-slick1 animated visible-false" data-appear="rotateInUpRight" data-delay="800">
                            <h2 class="ltext-201 cl2 p-t-19 p-b-43 respon1">
                                SẢN PHẨM MỚI
                            </h2>
                        </div>
                        <div class="layer-slick1 animated visible-false" data-appear="rotateIn" data-delay="1600">
                            <a href="product.html" class="flex-c-m stext-101 cl0 size-101 bg1 bor1 hov-btn1 p-lr-15 trans-04">
                                Mua Ngay
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Banner -->
<div class="custom-sec-banner bg0 p-t-80 p-b-50">
    <div class="container">
        <div class="row" style="border-radius: 4px;">
            <div class="col-md-6 col-xl-4 p-b-30 m-lr-auto">
                <div class="custom-banner-wrap">
                    <img src="~/Content/images1/banner1.jpg" alt="IMG-BANNER" class="custom-banner-img">
                    <div class="custom-banner-overlay"></div>
                    <a href="@Url.Action("AllListingLarge", "ListingLarge", new { Id = 7 }, null)" class="custom-banner-txt">
                        <div class="custom-banner-title">
                            <span class="ltext-102 trans-04 p-b-8">
                                Đồng Hồ Nữ
                            </span>
                        </div>
                        <div class="custom-banner-link-wrapper">
                            <div class="custom-banner-link stext-101 cl0 trans-09">
                                Mua Ngay
                            </div>
                        </div>
                    </a>
                </div>
            </div>
            <div class="col-md-6 col-xl-4 p-b-30 m-lr-auto">
                <div class="custom-banner-wrap">
                    <img src="~/Content/images1/banner2.jpg" alt="IMG-BANNER" class="custom-banner-img">
                    <div class="custom-banner-overlay"></div>
                    <a href="@Url.Action("AllListingLarge", "ListingLarge", new { Id = 1 }, null)" class="custom-banner-txt">
                        <div class="custom-banner-title">
                            <span class="ltext-102 trans-04 p-b-8">
                                Đồng Hồ Nam
                            </span>
                        </div>
                        <div class="custom-banner-link-wrapper">
                            <div class="custom-banner-link stext-101 cl0 trans-09">
                                Mua Ngay
                            </div>
                        </div>
                    </a>
                </div>
            </div>
            <div class="col-md-6 col-xl-4 p-b-30 m-lr-auto">
                <div class="custom-banner-wrap">
                    <img src="~/Content/images1/banner3.jpg" alt="IMG-BANNER" class="custom-banner-img">
                    <div class="custom-banner-overlay"></div>
                    <a href="@Url.Action("AllListingLarge", "ListingLarge", new { Id = 3 }, null)" class="custom-banner-txt">
                        <div class="custom-banner-title">
                            <span class="ltext-102 trans-04 p-b-8">
                                Đồng Hồ Thông Minh
                            </span>
                        </div>
                        <div class="custom-banner-link-wrapper">
                            <div class="custom-banner-link stext-101 cl0 trans-09">
                                Mua Ngay
                            </div>
                        </div>
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .custom-sec-banner {
        background-color: #f8f9fa;
        padding-top: 60px;
        padding-bottom: 60px;
    }

        .custom-sec-banner .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        .custom-sec-banner .row {
            display: flex;
            flex-wrap: wrap;
            margin: 0 -15px;
            border-radius: 8px;
        }

        .custom-sec-banner .col-md-6.col-xl-4 {
            padding: 0 15px;
            margin-bottom: 30px;
        }

    .custom-banner-wrap {
        position: relative;
        width: 100%;
        overflow: hidden;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .custom-banner-wrap:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

    .custom-banner-img {
        width: 100%;
        height: auto;
        display: block;
        transition: transform 0.5s ease;
    }

    .custom-banner-wrap:hover .custom-banner-img {
        transform: scale(1.05);
    }

    .custom-banner-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(to bottom, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.5));
        opacity: 0.7;
        transition: opacity 0.3s ease;
    }

    .custom-banner-wrap:hover .custom-banner-overlay {
        opacity: 0.9;
    }

    .custom-banner-txt {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        padding: 30px;
        color: #fff;
        text-decoration: none;
        z-index: 1;
    }

    .custom-banner-title {
        text-align: left;
    }

        .custom-banner-title span {
            font-size: 28px;
            font-weight: 700;
            letter-spacing: 1px;
            text-transform: uppercase;
            transition: transform 0.3s ease;
        }

    .custom-banner-wrap:hover .custom-banner-title span {
        transform: translateY(-5px);
    }

    .custom-banner-link-wrapper {
        text-align: left;
    }

    .custom-banner-link {
        font-size: 16px;
        font-weight: 500;
        background-color: #007bff;
        padding: 10px 20px;
        border-radius: 25px;
        display: inline-block;
        opacity: 0;
        transform: translateY(10px);
        transition: opacity 0.3s ease, transform 0.3s ease, background-color 0.3s ease;
    }

    .custom-banner-wrap:hover .custom-banner-link {
        opacity: 1;
        transform: translateY(0);
    }

    .custom-banner-link:hover {
        background-color: #0056b3;
        transform: scale(1.1);
    }
</style>

<!-- Product -->
<section class="bg0 p-t-23 p-b-140">
    <div class="container">
        <!-- Discounted Products Section -->
        <div class="p-b-10">
            <h3 class="ltext-103 cl5">
                Sản Phẩm Đang Giảm Giá
            </h3>
        </div>
        <div class="row" style="margin-top:10px">
            @{
                // Capture the 8 discounted products and their IDs
                var discountedProducts = Model.ListProduct
                    .Where(n => n.PriceDiscount.HasValue && n.PriceDiscount < n.Price)
                    .OrderByDescending(n => (n.Price - n.PriceDiscount) / n.Price)
                    .Take(8)
                    .ToList();
                var discountedProductIds = discountedProducts.Select(p => p.Id).ToList();
            }
            @foreach (var item in discountedProducts)
            {
                var discountPercentage = Math.Round(((item.Price - item.PriceDiscount) / item.Price * 100) ?? 0);
                <div class="col-sm-6 col-md-4 col-lg-3 p-b-35 isotope-item">
                    <div class="block2">
                        <div class="label1" data-label1="@discountPercentage% Off">
                            <div class="block2-pic hov-img0">
                                <img src="~/Content/images1/@item.Avatar" alt="IMG-PRODUCT">
                                <button data-id="@item.Id" class="block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04 js-show-modal1 quick-view-btn">
                                    Xem Nhanh
                                </button>
                            </div>
                        </div>
                        <div class="block2-txt flex-w flex-t p-t-14">
                            <div class="block2-txt-child1 flex-col-l">
                                <a href="product-detail.html" class="stext-104 cl4 hov-cl1 trans-04">
                                    @Html.ActionLink(item.Name, "Detail", "Product", new { Id = item.Id }, null)
                                </a>
                                <span class="stext-105 cl3">
                                    <span class="original-price" style="text-decoration: line-through; color: #999;">
                                        @string.Format("{0:N0}", item.Price * 1000) đ
                                    </span>
                                    <span class="discounted-price" style="color: #e74c3c;">
                                        @string.Format("{0:N0}", item.PriceDiscount * 1000) đ
                                    </span>
                                </span>
                                @item.ShortDes
                                <div class="countdown-timer">
                                    <span class="timer-days"></span>d
                                    <span class="timer-hours"></span>h
                                    <span class="timer-minutes"></span>m
                                    <span class="timer-seconds"></span>s
                                </div>
                            </div>
                            <div class="block2-txt-child2 flex-r p-t-3">
                                <a href="#" class="btn-addwish-b2 dis-block pos-relative js-addwish-b2 add-to-wishlist" data-product-id="@item.Id">
                                    <img class="icon-heart1 dis-block trans-04" src="~/Content/images1/icons/icon-heart-01.png" alt="ICON">
                                    <img class="icon-heart2 dis-block trans-04 ab-t-l" src="~/Content/images1/icons/icon-heart-02.png" alt="ICON">
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Recommended Products Section -->
        <div class="p-b-10">
            <h3 class="ltext-103 cl5">
                Sản Phẩm Đề Xuất
            </h3>
        </div>
        <div class="row" style="margin-top:10px">
            @foreach (var item in Model.ListProduct.Where(n => n.TypeId == 1).OrderByDescending(n => n.CreatedOnUtc).Take(8))
            {
                var showDiscount = discountedProductIds.Contains(item.Id);
                var discountPercentage = showDiscount ? Math.Round(((item.Price - item.PriceDiscount) / item.Price * 100) ?? 0) : 0;
                <div class="col-sm-6 col-md-4 col-lg-3 p-b-35 isotope-item" data-category="@item.CategoryId">
                    <div class="block2">
                        <div class="product-item">
                            <div class="block2-pic hov-img0">
                                @if (showDiscount)
                                {
                                    <div class="label1" data-label1="@discountPercentage% Off"></div>
                                }
                                <img src="~/Content/images1/@item.Avatar" alt="IMG-PRODUCT">
                                <button data-id="@item.Id" class="block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04 js-show-modal1 quick-view-btn">
                                    Xem Nhanh
                                </button>
                            </div>
                            <div class="block2-txt flex-w flex-t p-t-14">
                                <div class="block2-txt-child1 flex-col-l">
                                    <a href="product-detail.html" class="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6">
                                        @Html.ActionLink(item.Name, "Detail", "Product", new { Id = item.Id }, null)
                                    </a>
                                    <span class="stext-105 cl3">
                                        @if (showDiscount)
                                        {
                                            <span class="original-price" style="text-decoration: line-through; color: #999;">
                                                @string.Format("{0:N0}", item.Price * 1000) đ
                                            </span>
                                            <span class="discounted-price" style="color: #e74c3c;">
                                                @string.Format("{0:N0}", item.PriceDiscount * 1000) đ
                                            </span>
                                        }
                                        else
                                        {
                                            <span>
                                                @string.Format("{0:N0}", item.Price * 1000)đ
                                            </span>
                                        }
                                    </span>
                                    @item.ShortDes
                                </div>
                                <div class="block2-txt-child2 flex-r p-t-3">
                                    <a href="#" class="btn-addwish-b2 dis-block pos-relative js-addwish-b2 add-to-wishlist" data-product-id="@item.Id">
                                        <img class="icon-heart1 dis-block trans-04" src="~/Content/images1/icons/icon-heart-01.png" alt="ICON">
                                        <img class="icon-heart2 dis-block trans-04 ab-t-l" src="~/Content/images1/icons/icon-heart-02.png" alt="ICON">
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Product Overview Section -->
        <div class="p-b-10">
            <h3 class="ltext-103 cl5">
                Tổng Quan Sản Phẩm
            </h3>
        </div>
        <div class="flex-w flex-sb-m p-b-52">
            <div class="flex-w flex-l-m filter-tope-group m-tb-10">
                <ul class="main-menu flex-w">
                    <li class="category-label">Danh Mục:</li>
                    <li class="category-item">
                        <a href="#" class="stext-106 cl6 hov1 bor3 trans-04 m-r-5 m-tb-5 how-active1" data-filter="all">Tất Cả</a>
                    </li>
                    @foreach (var item in Model.ListCategory)
                    {
                        <li class="category-item">
                            <a href="#" class="stext-106 cl6 hov1 bor3 trans-04 m-r-5 m-tb-5" data-filter="@item.Id">@item.Name</a>
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="row isotope-grid">
            @foreach (var item in Model.ListProduct)
            {
                // Check if this product is one of the 8 discounted products
                var showDiscount = discountedProductIds.Contains(item.Id);
                var discountPercentage = showDiscount ? Math.Round(((item.Price - item.PriceDiscount) / item.Price * 100) ?? 0) : 0;
                <div class="col-sm-6 col-md-4 col-lg-3 p-b-35 isotope-item" data-category="@item.CategoryId">
                    <div class="block2">
                        <div class="product-item">
                            <div class="block2-pic hov-img0">
                                @if (showDiscount)
                                {
                                    <div class="label1" data-label1="@discountPercentage% Off"></div>
                                }
                                <img src="~/Content/images1/@item.Avatar" alt="IMG-PRODUCT">
                                <button data-id="@item.Id" class="block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04 js-show-modal1 quick-view-btn">
                                    Xem Nhanh
                                </button>
                            </div>
                            <div class="block2-txt flex-w flex-t p-t-14">
                                <div class="block2-txt-child1 flex-col-l">
                                    <a href="product-detail.html" class="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6">
                                        @Html.ActionLink(item.Name, "Detail", "Product", new { Id = item.Id }, null)
                                    </a>
                                    <span class="stext-105 cl3">
                                        @if (showDiscount)
                                        {
                                            <span class="original-price" style="text-decoration: line-through; color: #999;">
                                                @string.Format("{0:N0}", item.Price * 1000) đ
                                            </span>
                                            <span class="discounted-price" style="color: #e74c3c;">
                                                @string.Format("{0:N0}", item.PriceDiscount * 1000) đ
                                            </span>
                                        }
                                        else
                                        {
                                            <span>
                                                @string.Format("{0:N0}", item.Price * 1000)đ
                                            </span>
                                                                                }
                                    </span>
                                    @item.ShortDes
                                </div>
                                <div class="block2-txt-child2 flex-r p-t-3">
                                    <a href="#" class="btn-addwish-b2 dis-block pos-relative js-addwish-b2 add-to-wishlist" data-product-id="@item.Id">
                                        <img class="icon-heart1 dis-block trans-04" src="~/Content/images1/icons/icon-heart-01.png" alt="ICON">
                                        <img class="icon-heart2 dis-block trans-04 ab-t-l" src="~/Content/images1/icons/icon-heart-02.png" alt="ICON">
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://unpkg.com/isotope-layout@3/dist/isotope.pkgd.min.js"></script>
        <script>
            const discountedProductIds = @Html.Raw(Json.Encode(discountedProductIds));

            $(document).ready(function () {
                // Initialize Isotope
                const $grid = $('.isotope-grid').isotope({
                    itemSelector: '.isotope-item',
                    layoutMode: 'fitRows',
                    transitionDuration: '0.3s',
                    hiddenStyle: {
                        opacity: 0,
                        transform: 'scale(0.95)'
                    },
                    visibleStyle: {
                        opacity: 1,
                        transform: 'scale(1)'
                    }
                });

                // Handle category click
                $('.category-item a').on('click', function (e) {
                    e.preventDefault();
                    $('.category-item a').removeClass('active');
                    $(this).addClass('active');
                    const filter = $(this).data('filter');
                    if (filter === 'all') {
                        $grid.isotope({ filter: '*' });
                    } else {
                        $grid.isotope({ filter: `[data-category="${filter}"]` });
                    }
                });

                $('.category-item a[data-filter="all"]').trigger('click');

                // Countdown Timer for Discounted Products
                $('.countdown-timer').each(function () {
                    const $timer = $(this);
                    // Set sale end date to 7 days from now
                    const saleEndDate = new Date();
                    saleEndDate.setDate(saleEndDate.getDate() + 7);
                    const endDate = saleEndDate.getTime();

                    function updateTimer() {
                        const now = new Date().getTime();
                        const distance = endDate - now;

                        if (distance < 0) {
                            $timer.text('Khuyến mãi đã kết thúc');
                            return;
                        }

                        const days = Math.floor(distance / (1000 * 60 * 60 * 24));
                        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                        const seconds = Math.floor((distance % (1000 * 60)) / 1000);

                        $timer.find('.timer-days').text(days);
                        $timer.find('.timer-hours').text(hours < 10 ? '0' + hours : hours);
                        $timer.find('.timer-minutes').text(minutes < 10 ? '0' + minutes : minutes);
                        $timer.find('.timer-seconds').text(seconds < 10 ? '0' + seconds : seconds);
                    }

                    updateTimer();
                    setInterval(updateTimer, 1000);
                });
            });
        </script>

        <style>
            .main-menu {
                display: flex;
                align-items: center;
                list-style: none;
                padding: 0;
                margin: 0;
            }

            .category-label {
                font-weight: bold;
            }

            .category-item {
                position: relative;
                margin-right: 0px;
            }

                .category-item:not(:first-child)::before {
                    content: '|';
                    position: absolute;
                    left: -10px;
                    top: 50%;
                    transform: translateY(-50%);
                    color: #666;
                    font-size: 10px;
                }

                .category-item a {
                    text-decoration: none;
                    color: #666;
                    padding: 5px 5px;
                    border-radius: 3px;
                    transition: all 0.3s ease;
                }

                    .category-item a:hover {
                        color: #000;
                        background-color: #f5f5f5;
                    }

                    .category-item a.active {
                        color: #fff;
                        background-color: #007bff;
                    }

            .isotope-grid {
            }

            .isotope-item {
                transition: opacity 0.3s ease, transform 0.3s ease;
                width: 100%;
            }

                .isotope-item.isotope-hidden {
                    opacity: 0;
                    transform: scale(0.95);
                    pointer-events: none;
                }

            .countdown-timer {
                margin-top: 10px;
                font-size: 14px;
                color: #e74c3c;
                font-weight: bold;
                background-color: #fff3f3;
                padding: 5px 10px;
                border-radius: 5px;
                display: inline-block;
            }

                .countdown-timer span {
                    margin-right: 5px;
                }
        </style>



        <div class="flex-c-m flex-w w-full p-t-45">
            <a href="#" class="flex-c-m stext-101 cl5 size-103 bg2 bor1 hov-btn1 p-lr-15 trans-04">
                Tải Thêm
            </a>
        </div>
    </div>

    <style>
        .btn-addwish-b2 {
            position: relative;
            display: inline-block;
            border: none !important;
            background: none !important;
            padding: 0;
        }

        .icon-heart1, .icon-heart2 {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            transition: opacity 0.3s ease;
            width: 20px;
            height: 20px;
            border: none !important;
            background: none !important;
        }

        .icon-heart2 {
            opacity: 0;
        }

        .btn-addwish-b2.added .icon-heart1 {
            opacity: 0;
        }

        .btn-addwish-b2.added .icon-heart2 {
            opacity: 1;
        }

        .block2-txt-child2 {
            border: none !important;
            background: none !important;
        }

        .btn-addwish-b2:hover,
        .btn-addwish-b2:focus {
            border: none !important;
            background: none !important;
            box-shadow: none !important;
        }
    </style>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function () {
            // Wishlist functionality
            function checkWishlistStatus(productId, callback) {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("CheckWishlistStatus", "ShoppingCart")',
                    data: { productId: productId },
                    dataType: 'json',
                    success: function (response) {
                        callback(response.isInWishlist);
                    },
                    error: function () {
                        callback(false);
                    }
                });
            }
            $('.add-to-wishlist').each(function () {
                var $button = $(this);
                var productId = $button.data('product-id');
                checkWishlistStatus(productId, function (isInWishlist) {
                    if (isInWishlist) {
                        $button.addClass('added');
                    }
                });
            });
            $('.add-to-wishlist').on('click', function (e) {
                e.preventDefault();
                var $button = $(this);
                var productId = $button.data('product-id');
                var quantity = 1;
                if (!productId) {
                    alert('Không thể thêm vào danh sách yêu thích: ID sản phẩm không hợp lệ.');
                    return;
                }
                var isAdding = !$button.hasClass('added');
                $.ajax({
                    type: 'POST',
                    url: isAdding ? '@Url.Action("AddToWishlist", "ShoppingCart")' : '@Url.Action("RemoveFromWishlist", "ShoppingCart")',
                    data: JSON.stringify({ Id: productId, Quantity: quantity }),
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        if (response.success) {
                            if (isAdding) {
                                $button.addClass('added');
                                Swal.fire('Thành công!', 'Đã thêm vào mục yêu thích thành công!', 'success');
                            } else {
                                $button.removeClass('added');
                                Swal.fire('Thành công!', 'Đã xóa sản phẩm khỏi danh sách yêu thích!', 'success');
                            }
                            $('#WishlistCount').text(response.wishlistCount);
                        } else {
                            alert('Có lỗi xảy ra: ' + response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        alert('Có lỗi xảy ra: ' + xhr.responseText);
                    }
                });
            });
        });
    </script>

    <div class="chatbot-container minimized">
        <div class="chatbot-icon">
            <svg xmlns="http://2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
                <path d="M9 10h.01"></path>
                <path d="M12 10h.01"></path>
                <path d="M15 10h.01"></path>
            </svg>
        </div>
        <div class="chatbot-window">
            <div class="chatbot-header">
                <span>Trợ Lý AI</span>
                <button class="chatbot-close">×</button>
            </div>
            <div class="chatbot-body">
                <div class="chatbot-messages">
                    <div class="chatbot-message bot">Chào bạn! Tôi là trợ lý AI. Hỏi tôi về sản phẩm hoặc bất cứ điều gì nhé!</div>
                </div>
                <div class="chatbot-input">
                    <input type="text" placeholder="Nhập tin nhắn..." />
                    <button>
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <line x1="22" y1="2" x2="11" y2="13"></line>
                            <polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>
                        </svg>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <style>
        .chatbot-container {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1000;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }

        .chatbot-icon {
            width: 60px;
            height: 60px;
            background-color: #007bff;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            transition: transform 0.3s ease, background-color 0.3s ease;
        }

            .chatbot-icon:hover {
                transform: scale(1.1);
                background-color: #0056b3;
            }

            .chatbot-icon svg {
                width: 28px;
                height: 28px;
                color: #fff;
            }

        .chatbot-window {
            width: 320px;
            background-color: #fff;
            border-radius: 12px;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
            overflow: hidden;
            display: none;
            flex-direction: column;
        }

        .chatbot-container:not(.minimized) .chatbot-window {
            display: flex;
        }

        .chatbot-container.minimized .chatbot-icon {
            display: flex;
        }

        .chatbot-header {
            background-color: #007bff;
            color: #fff;
            padding: 12px 16px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 16px;
            font-weight: 500;
        }

        .chatbot-close {
            background: none;
            border: none;
            color: #fff;
            font-size: 20px;
            cursor: pointer;
            transition: transform 0.2s ease;
        }

            .chatbot-close:hover {
                transform: rotate(90deg);
            }

        .chatbot-body {
            display: flex;
            flex-direction: column;
            max-height: 400px;
        }

        .chatbot-messages {
            flex: 1;
            padding: 16px;
            overflow-y: auto;
            background-color: #f8f9fa;
        }

        .chatbot-message {
            margin: 8px 0;
            padding: 10px 14px;
            border-radius: 8px;
            font-size: 14px;
            line-height: 1.5;
            max-width: 80%;
            word-wrap: break-word;
        }

            .chatbot-message.bot {
                background-color: #e9ecef;
                color: #333;
            }

            .chatbot-message.user {
                background-color: #007bff;
                color: #fff;
                align-self: flex-end;
                margin-left: auto;
            }

        .chatbot-input {
            display: flex;
            padding: 12px;
            background-color: #fff;
            border-top: 1px solid #ddd;
        }

            .chatbot-input input {
                flex: 1;
                padding: 10px;
                border: 1px solid #ddd;
                border-radius: 20px;
                font-size: 14px;
                outline: none;
            }

            .chatbot-input button {
                width: 36px;
                height: 36px;
                background-color: #007bff;
                border: none;
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                cursor: pointer;
                margin-left: 8px;
                transition: background-color 0.3s ease;
            }

                .chatbot-input button:hover {
                    background-color: #0056b3;
                }

                .chatbot-input button svg {
                    width: 20px;
                    height: 20px;
                    color: #fff;
                }

        .chatbot-messages::-webkit-scrollbar {
            width: 6px;
        }

        .chatbot-messages::-webkit-scrollbar-thumb {
            background-color: #007bff;
            border-radius: 3px;
        }

        .chatbot-messages::-webkit-scrollbar-track {
            background-color: #f1f1f1;
        }
    </style>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.chatbot-icon, .chatbot-close').on('click', function () {
                $('.chatbot-container').toggleClass('minimized');
            });
            $('.chatbot-input button').on('click', function () {
                sendMessage();
            });
            $('.chatbot-input input').on('keypress', function (e) {
                if (e.which === 13) {
                    sendMessage();
                }
            });
            function sendMessage() {
                const $input = $('.chatbot-input input');
                const message = $input.val().trim();
                if (!message) return;
                $('.chatbot-messages').append(
                    `<div class="chatbot-message user">${$('<div>').text(message).html()}</div>`
                );
                $input.val('');
                setTimeout(() => {
                    const botResponse = getBotResponse(message);
                    $('.chatbot-messages').append(
                        `<div class="chatbot-message bot">${$('<div>').text(botResponse).html()}</div>`
                    );
                    scrollToBottom();
                }, 500);
                scrollToBottom();
            }
            function getBotResponse(message) {
                message = message.toLowerCase();
                if (message.includes('đồng hồ nam') || message.includes('men watch')) {
                    return 'Chúng tôi có bộ sưu tập đồng hồ nam hiện đại 2025 với nhiều phong cách từ cổ điển đến thể thao. Bạn thích đồng hồ cơ, quartz, hay thể thao? Hãy cho tôi biết để gợi ý thêm!';
                } else if (message.includes('đồng hồ nữ') || message.includes('women watch') || message.includes('ladies watch')) {
                    return 'Đồng hồ nữ thanh lịch 2025 rất phù hợp cho các dịp trang trọng hoặc hàng ngày. Bạn muốn tìm đồng hồ đính đá, dây da, hay dây kim loại?';
                } else if (message.includes('đồng hồ thông minh') || message.includes('smartwatch')) {
                    return 'Đồng hồ thông minh của chúng tôi có tính năng theo dõi sức khỏe, thông báo, và thiết kế thời trang. Bạn muốn biết thêm về tính năng hay các mẫu nổi bật?';
                } else if (message.includes('giá') || message.includes('bao nhiêu') || message.includes('cost')) {
                    return 'Giá đồng hồ tùy thuộc vào mẫu mã, từ vài trăm nghìn đến hàng triệu đồng. Bạn muốn biết giá của đồng hồ nam, nữ, hay thông minh? Hãy cho tôi thêm chi tiết!';
                } else if (message.includes('khuyến mãi') || message.includes('sale') || message.includes('giảm giá')) {
                    return 'Hiện tại chúng tôi có chương trình giảm giá đặc biệt cho một số mẫu đồng hồ nam và nữ. Bạn có thể xem chi tiết trên trang sản phẩm hoặc hỏi tôi thêm!';
                } else if (message.includes('mua') || message.includes('đặt hàng') || message.includes('order')) {
                    return 'Bạn có thể mua hàng trực tiếp trên trang web bằng cách chọn sản phẩm và nhấn "Mua Ngay". Nếu cần hỗ trợ, hãy cho tôi biết bạn muốn mua đồng hồ loại nào!';
                } else if (message.includes('thương hiệu') || message.includes('brand')) {
                    return 'Chúng tôi có các thương hiệu nổi tiếng như Rolex, Seiko, Citizen, và nhiều hãng khác. Bạn thích thương hiệu nào hoặc muốn tôi gợi ý?';
                } else if (message.includes('bảo hành') || message.includes('warranty')) {
                    return 'Tất cả đồng hồ của chúng tôi đều có bảo hành từ 1-2 năm tùy mẫu. Bạn muốn biết chi tiết về bảo hành cho đồng hồ nam, nữ, hay thông minh?';
                } else if (message.includes('giao hàng') || message.includes('ship') || message.includes('vận chuyển')) {
                    return 'Chúng tôi giao hàng toàn quốc, thời gian từ 2-5 ngày tùy khu vực. Phí giao hàng miễn phí cho đơn từ 2 triệu đồng. Bạn muốn biết thêm chi tiết?';
                } else if (message.includes('chất liệu') || message.includes('dây') || message.includes('material')) {
                    return 'Đồng hồ của chúng tôi có nhiều chất liệu như dây da, dây kim loại, hoặc dây cao su cho đồng hồ thể thao. Bạn muốn tìm đồng hồ với chất liệu cụ thể nào?';
                } else if (message.includes('màu') || message.includes('color')) {
                    return 'Chúng tôi có đồng hồ với nhiều màu sắc như đen, bạc, vàng, hoặc trắng. Bạn thích màu nào hoặc đang tìm đồng hồ cho dịp gì?';
                } else if (message.includes('chống nước') || message.includes('water resistant')) {
                    return 'Nhiều mẫu đồng hồ của chúng tôi có tính năng chống nước, phù hợp cho bơi lội hoặc sử dụng hàng ngày. Bạn muốn tìm đồng hồ chống nước cho nam hay nữ?';
                } else if (message.includes('xin chào') || message.includes('hi') || message.includes('hello')) {
                    return 'Xin chào! Tôi là trợ lý AI của cửa hàng đồng hồ. Bạn muốn tìm hiểu về đồng hồ nam, nữ, thông minh, hay cần tôi gợi ý sản phẩm?';
                } else if (message.includes('thời tiết') || message.includes('weather')) {
                    return 'Hì, tôi chuyên về đồng hồ, không giỏi dự báo thời tiết đâu! 😄 Bạn muốn tôi gợi ý một chiếc đồng hồ chống nước để đi mưa không?';
                } else {
                    const randomResponses = [
                        'Tôi là trợ lý AI chuyên về đồng hồ. Bạn muốn tìm hiểu về đồng hồ nam, nữ, hay thông minh?',
                        'Bạn đang tìm đồng hồ cho dịp đặc biệt hay sử dụng hàng ngày? Hãy cho tôi biết thêm chi tiết!',
                        'Chúng tôi có rất nhiều mẫu đồng hồ đẹp. Bạn muốn tôi giới thiệu một vài sản phẩm hot không?',
                        'Hãy hỏi tôi về đồng hồ, giá cả, hoặc khuyến mãi, tôi sẽ trả lời ngay!',
                        'Bạn muốn tìm đồng hồ phong cách nào? Cổ điển, hiện đại, hay thể thao?'
                    ];
                    return randomResponses[Math.floor(Math.random() * randomResponses.length)];
                }
            }
            function scrollToBottom() {
                const $messages = $('.chatbot-messages');
                $messages.scrollTop($messages[0].scrollHeight);
            }
        });

    </script>
</section>