@model LeThanhChien_2122110282.Models.HomeModel

@{
    ViewBag.Title = "AllListingGrid";
    // Get discounted product IDs from ViewBag
    var discountedProductIds = ViewBag.DiscountedProductIds as List<int> ?? new List<int>();
}

<div class="container" style="margin-top:100px">
    <div class="bread-crumb flex-w p-l-25 p-r-15 p-t-30 p-lr-0-lg">
        <a href="@Url.Action("Index","Home")" class="stext-109 cl8 hov-cl1 trans-04">
            Trang chủ
            <i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
        </a>
        <span class="stext-109 cl4">
            Cửa hàng
        </span>
    </div>
</div>
<div class="bg0 m-t-23 p-b-140">
    <div class="container">
        <div class="flex-w flex-sb-m p-b-52">
            <div class="flex-w flex-l-m filter-tope-group m-tb-10">
                <ul class="main-menu flex-w">
                    <li class="category-label">Danh mục:</li>
                    @foreach (var item in Model.ListCategory)
                    {
                        <li class="category-item">
                            <a href="@Url.Action("AllListingLarge", "ListingLarge", new { Id = item.Id }, null)" class="stext-106 cl6 hov1 bor3 trans-04 m-r-5 m-tb-5" data-filter="@item.Id">@item.Name</a>
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div id="product-list">
            <div class="row isotope-grid">
                @foreach (var item in Model.ListProduct)
                {
                    // Determine if the product is in the discounted list
                    var isDiscounted = discountedProductIds.Contains(item.Id);
                    var priceToUse = isDiscounted && item.PriceDiscount.HasValue && item.PriceDiscount.Value < (item.Price ?? 0)
                        ? item.PriceDiscount.Value
                        : (item.Price ?? 0);
                    var discountPercentage = isDiscounted && item.PriceDiscount.HasValue && item.PriceDiscount.Value < (item.Price ?? 0)
                        ? Math.Round((((item.Price ?? 0) - item.PriceDiscount.Value) / (item.Price ?? 1)) * 100)
                        : 0.0;

                    <div class="col-sm-6 col-md-4 col-lg-3 p-b-35 isotope-item" data-category="@item.CategoryId">
                        <div class="block2">
                            <div class="product-item">
                                <div class="block2-pic hov-img0">
                                    <img src="~/Content/images1/@item.Avatar" alt="IMG-PRODUCT">
                                    <button data-id="@item.Id" class="block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04 js-show-modal1 quick-view-btn">
                                        Chi tiết
                                    </button>
                                </div>
                                <div class="block2-txt flex-w flex-t p-t-14">
                                    <div class="block2-txt-child1 flex-col-l">
                                        <a href="product-detail.html" class="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6">
                                            @Html.ActionLink(@item.Name, "Detail", "Product", new { Id = item.Id }, null)
                                        </a>
                                        <span class="stext-105 cl3">
                                            @if (isDiscounted && item.PriceDiscount.HasValue && item.PriceDiscount.Value < (item.Price ?? 0))
                                            {
                                                <span style="text-decoration: line-through; color: #999;">
                                                    @(string.Format("{0:N0}", (item.Price ?? 0) * 1000)) đ
                                                </span>
                                                <span style="color: #e74c3c;">
                                                    @(string.Format("{0:N0}", item.PriceDiscount.Value * 1000)) đ
                                                </span>
                                                <span style="color: #e74c3c; font-size: 0.9rem;">(-@discountPercentage%)</span>
                                            }
                                            else
                                            {
                                                <span>
                                                    @(string.Format("{0:N0}", (item.Price ?? 0) * 1000)) đ
                                                </span>
                                            }
                                        </span>
                                        @item.ShortDes
                                    </div>
                                    <div class="block2-txt-child2 flex-r p-t-3">
                                        <a href="#" class="btn-addwish-b2 dis-block pos-relative js-addwish-b2">
                                            <img class="icon-heart1 dis-block trans-04" src="~/Content/images1/icons/icon-heart-01.png" alt="ICON">
                                            <img class="icon-heart2 dis-block trans-04 ab-t-l" src="~/Content/images1/icons/icon-heart-02.png" alt="ICON">
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <nav class="mb-4" aria-label="Page navigation sample" style="margin-top:100px; margin-bottom:1px">
            <div class="custom-pagination" id="pagination-controls">
                <!-- Các nút phân trang sẽ được render động ở đây -->
            </div>
            <div class="pagination-info" id="pagination-info">
                <!-- Hiển thị thông tin: Trang 1 / 10 -->
            </div>
            <div class="pagination-jump">
                <input type="number" id="jump-to-page" min="1" placeholder="Nhập trang">
                <button id="jump-btn">Đi</button>
            </div>
            <div id="loading-spinner" style="display:none; text-align:center;">
                <i class="fa fa-spinner fa-spin" style="font-size:24px;"></i>
            </div>
        </nav>
    </div>
</div>

<style>
    /* Định kiểu cho phần phân trang mới */
    .custom-pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 10px;
        background-color: #007bff; /* Màu tím */
        padding: 10px 20px;
        border-radius: 50px; /* Hình viên thuốc */
        width: 500px;
        margin-left: 340px
    }

        .custom-pagination > * {
            width: 40px;
            height: 40px;
            border-radius: 50%; /* Nút tròn */
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 16px;
        }

        .custom-pagination .page,
        .custom-pagination .arrow {
            background-color: #007bff;
            color: white;
            border: none;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .custom-pagination .page:hover,
            .custom-pagination .arrow:hover:not(:disabled) {
                background-color: #007bff; /* Tím nhạt khi hover */
            }

            .custom-pagination .page.active {
                background-color: white;
                color: #007bff;
                border: 2px solid #007bff;
            }

            .custom-pagination .arrow:disabled {
                opacity: 0.5;
                cursor: not-allowed;
            }

        .custom-pagination .ellipsis {
            background-color: #007bff;
            color: white;
        }

    /* Định kiểu cho danh sách sản phẩm */
    #product-list {
        display: flex;
        flex-wrap: wrap;
    }

    .isotope-item {
        display: block;
    }

    .block2-pic img {
        width: 100%;
        height: auto;
    }

    /* Pagination info */
    .pagination-info {
        text-align: center;
        margin-top: 10px;
        font-size: 14px;
        color: #666;
    }

    /* Pagination jump */
    .pagination-jump {
        display: flex;
        justify-content: center;
        margin-top: 10px;
    }

        .pagination-jump input {
            width: 60px;
            margin-right: 10px;
            padding: 5px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .pagination-jump button {
            padding: 5px 10px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
        }

            .pagination-jump button:hover {
                background-color: #0056b3;
            }
</style>

<script>
    // Pass discountedProductIds to JavaScript
    const discountedProductIds = @Html.Raw(Json.Encode(discountedProductIds));

    document.addEventListener("DOMContentLoaded", function () {
        const pageSize = 12; // Số sản phẩm mỗi trang
        let currentPage = 1;
        let totalPages = 10; // Giả định ban đầu, sẽ được cập nhật từ server

        // Lấy danh sách sản phẩm từ server
        function fetchProducts(page) {
            document.getElementById('loading-spinner').style.display = 'block';
            fetch(`/Home/GetProducts?page=${page}&pageSize=${pageSize}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        renderProducts(data.Products, data.DiscountedProductIds);
                        totalPages = data.TotalPages;
                        currentPage = data.CurrentPage; // Update currentPage
                        renderPagination(data.TotalPages, data.CurrentPage);
                    } else {
                        console.error('Error fetching products:', data.message);
                    }
                    document.getElementById('loading-spinner').style.display = 'none';
                })
                .catch(error => {
                    console.error('Error fetching products:', error);
                    document.getElementById('loading-spinner').style.display = 'none';
                });
        }

        // Hiển thị danh sách sản phẩm
        function renderProducts(products, discountedProductIds) {
            const productList = document.getElementById('product-list');
            productList.innerHTML = ''; // Xóa nội dung cũ

            products.forEach(product => {
                // Determine if the product is in the discounted list
                const isDiscounted = discountedProductIds.includes(product.Id);
                const priceToUse = isDiscounted && product.PriceDiscount && product.PriceDiscount < product.Price
                    ? product.PriceDiscount
                    : product.Price;
                const discountPercentage = isDiscounted && product.PriceDiscount && product.PriceDiscount < product.Price
                    ? Math.round(((product.Price - product.PriceDiscount) / product.Price) * 100)
                    : 0;

                const productDiv = document.createElement('div');
                productDiv.className = 'col-sm-6 col-md-4 col-lg-3 p-b-35 isotope-item women';
                productDiv.innerHTML = `
                    <div class="block2">
                    <a href="/Product/Detail/${product.Id}" class="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6">
                        <div class="block2-pic hov-img0">
                            <img src="/Content/images1/${product.Avatar}" alt="${product.Name}" onerror="this.src='/Content/images1/default-image.jpg'">
                           
                        </div>
                        </a>
                        <div class="block2-txt flex-w flex-t p-t-14">
                            <div class="block2-txt-child1 flex-col-l">
                                <a href="/Product/Detail/${product.Id}" class="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6">
                                    ${product.Name}
                                </a>
                                <span class="stext-105 cl3">
                                    ${
                                        isDiscounted && product.PriceDiscount && product.PriceDiscount < product.Price
                                            ? `
                                                <span style="text-decoration: line-through; color: #999;">
                                                    ${(product.Price * 1000).toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })}
                                                </span>
                                                <span style="color: #e74c3c;">
                                                    ${(product.PriceDiscount * 1000).toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })}
                                                </span>
                                                <span style="color: #e74c3c; font-size: 0.9rem;">
                                                    (-${discountPercentage}%)
                                                </span>`
                                            : `
                                                ${(product.Price * 1000).toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })}
                                            `
                                    }
                                </span>
                                ${product.ShortDes}
                            </div>
                            <div class="block2-txt-child2 flex-r p-t-3">
                                <a href="#" class="btn-addwish-b2 dis-block pos-relative js-addwish-b2">
                                    <img class="icon-heart1 dis-block trans-04" src="/Content/images1/icons/icon-heart-01.png" alt="ICON">
                                    <img class="icon-heart2 dis-block trans-04 ab-t-l" src="/Content/images1/icons/icon-heart-02.png" alt="ICON">
                                </a>
                            </div>
                        </div>
                    </div>
                `;
                productList.appendChild(productDiv);
            });

            // Khởi tạo lại Isotope nếu cần
            if (typeof Isotope !== 'undefined') {
                const iso = new Isotope(productList, {
                    itemSelector: '.isotope-item',
                    layoutMode: 'fitRows'
                });
                iso.layout();
            }
        }

        // Hiển thị các nút phân trang
        function renderPagination(totalPages, currentPage) {
            const paginationControls = document.getElementById('pagination-controls');
            paginationControls.innerHTML = '';

            // Nút mũi tên trái
            const leftArrow = document.createElement('button');
            leftArrow.className = 'arrow left';
            leftArrow.textContent = '←';
            leftArrow.setAttribute('aria-label', 'Previous');
            if (currentPage > 1) {
                leftArrow.addEventListener('click', () => fetchProducts(currentPage - 1));
            } else {
                leftArrow.disabled = true;
            }
            paginationControls.appendChild(leftArrow);

            // Các nút trang với dấu chấm lửng
            const maxPagesToShow = 5;
            let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));
            let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);
            if (endPage - startPage + 1 < maxPagesToShow) {
                startPage = Math.max(1, endPage - maxPagesToShow + 1);
            }

            if (startPage > 1) {
                addPageButton(1);
                if (startPage > 2) addEllipsis();
            }

            for (let i = startPage; i <= endPage; i++) {
                addPageButton(i);
            }

            if (endPage < totalPages) {
                if (endPage < totalPages - 1) addEllipsis();
                addPageButton(totalPages);
            }

            // Nút mũi tên phải
            const rightArrow = document.createElement('button');
            rightArrow.className = 'arrow right';
            rightArrow.textContent = '→';
            rightArrow.setAttribute('aria-label', 'Next');
            if (currentPage < totalPages) {
                rightArrow.addEventListener('click', () => fetchProducts(currentPage + 1));
            } else {
                rightArrow.disabled = true;
            }
            paginationControls.appendChild(rightArrow);

            // Hàm thêm nút trang
            function addPageButton(page) {
                const button = document.createElement('button');
                button.className = `page ${page === currentPage ? 'active' : ''}`;
                button.textContent = page;
                button.setAttribute('aria-label', `Page ${page}`);
                button.addEventListener('click', () => fetchProducts(page));
                paginationControls.appendChild(button);
            }

            // Hàm thêm dấu chấm lửng
            function addEllipsis() {
                const span = document.createElement('span');
                span.className = 'ellipsis';
                span.textContent = '...';
                paginationControls.appendChild(span);
            }

            // Cập nhật thông tin phân trang
            document.getElementById('pagination-info').textContent = `Trang ${currentPage} / ${totalPages}`;
        }

        // Nhảy đến trang
        document.getElementById('jump-btn').addEventListener('click', () => {
            const page = parseInt(document.getElementById('jump-to-page').value);
            if (page >= 1 && page <= totalPages) {
                fetchProducts(page);
            }
        });

        // Điều khiển bằng phím mũi tên
        document.addEventListener('keydown', (e) => {
            if (e.key === 'ArrowLeft' && currentPage > 1) {
                fetchProducts(currentPage - 1);
            } else if (e.key === 'ArrowRight' && currentPage < totalPages) {
                fetchProducts(currentPage + 1);
            }
        });

        // Gọi lần đầu để hiển thị trang đầu tiên
        fetchProducts(currentPage);
    });
</script>